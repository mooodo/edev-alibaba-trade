spring:
  application:
    name: service-customer
  profiles:
    active: dev
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
mybatis:
  mapperLocations: classpath*:mapper/*Mapper.xml
logging:
  level:
    com.edev.trade: INFO
    com.edev.support: INFO
    com.edev.trade.query.dao: DEBUG
    com.edev.support.dao: DEBUG
    com.edev.support.cache: DEBUG
    com.alibaba: WARN
    io.seata: INFO
---
spring:
  profiles: dev
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        username: nacos
        password: nacos
      config:
        enabled: false
        refresh-enabled: false
    sentinel:
      transport:
        dashboard: localhost:8858
      eager: true
  datasource:
    url: jdbc:mysql://kubernetes:32306/edevCustomer?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
    username: customer
    password: customer1234
    type: com.alibaba.druid.pool.DruidDataSource
  redis:
    database: 0
    host: kubernetes
    port: 31379
    password: redis1234
    pool:
      maxActive: 200
      maxWait: -1
      maxIdel: 10
      minIdel: 0
    timeout: 1000
server:
  port: 9002
management:
  endpoints:
    web:
      exposure:
        include: '*'
seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: service-trade-group
  enable-auto-data-source-proxy: true
  service:
    vgroup-mapping:
      service-trade-group: default
    grouplist:
      default: localhost:8091
    enable-degrade: false
    disable-global-transaction: false
  registry:
    type: nacos
    nacos:
      cluster: default
      application: seata-server
      server-addr: ${spring.cloud.nacos.discovery.server-addr}
      group: SEATA_GROUP
      namespace: ""
      username: ${spring.cloud.nacos.discovery.username}
      password: ${spring.cloud.nacos.discovery.password}
  config:
    type: nacos
    nacos:
      server-addr: ${spring.cloud.nacos.discovery.server-addr}
      group: SEATA_GROUP
      namespace: ""
      username: ${spring.cloud.nacos.discovery.username}
      password: ${spring.cloud.nacos.discovery.password}
---
spring:
  profiles: docker
  config:
    import: nacos:${spring.application.name}.${spring.cloud.nacos.config.file-extension}
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ADDR}
        username: ${NACOS_USR:nacos}
        password: ${NACOS_PWD:nacos}
      config:
        server-addr: ${NACOS_ADDR}
        file-extension: yaml
server:
  port: ${SERVICE_PORT:9002}